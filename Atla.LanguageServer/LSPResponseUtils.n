using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Newtonsoft.Json;

namespace Atla.LanguageServer
{
    [JsonObject]
    public class Response {
        [JsonProperty]
        public id: int;
        [JsonProperty]
        public result: object;
        
        public this(id: int, result: object) {
            this.id = id;
            this.result = result;
        }
    }
    
    [JsonObject]
    public class InitializeResult {
        [JsonProperty]
        public mutable capabilities: ServerCapabilities;
        [JsonProperty]
        public mutable serverInfo: ServerInfo;
    }
    
    public enum TextDocumentSyncKind {
        | None = 0
        | Full = 1
        | Incremental = 2
    }
    
    [JsonObject]
    public class TextDocumentSyncOptions {
        [JsonProperty]
        public mutable openClose: bool = true;
        [JsonProperty]
        public mutable change: TextDocumentSyncKind = TextDocumentSyncKind.Full;
        
        public this(openClose: bool, change: TextDocumentSyncKind) {
            this.openClose = openClose;
            this.change = change;
        }
    }
    
    [JsonObject]
    public class ServerCapabilities {
        [JsonProperty]
        public mutable documentHighlightProvider: bool = false;
        [JsonProperty]
        public mutable textDocumentSync: TextDocumentSyncOptions;
        
        public this(documentHighlightProvider: bool, textDocumentSync: TextDocumentSyncOptions) {
            this.documentHighlightProvider = documentHighlightProvider;
            this.textDocumentSync = textDocumentSync;
        }
    }
    
    [JsonObject]
    public class ServerInfo {
        [JsonProperty]
        public mutable name: string;
        [JsonProperty]
        public mutable version: string;
        
        public this(name: string, version: string) {
            this.name = name;
            this.version = version;
        }
    }
}
